<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>社区话题</title>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <link rel="stylesheet" href="/css/font-awesome.min.css">
</head>
<style type="text/css">
    body {
        margin: 0;
        padding: 0;
        background: #dceffe;
    }
    
    #app {
        text-align: center;
    }
    
    .menu-padding {
        padding-left: 35%;
    }
    
    a {
        text-decoration: none;
    }
    
    .content {
        margin: 0 auto;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        width: 65%;
        background: #fff;
        padding: 20px;
        flex-wrap: wrap;
    }
    
    .content>div {
        text-align: left;
        width: 100%;
    }
    
    .user {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        width: 100%;
        flex-wrap: nowrap;
    }
    
    .avator img {
        cursor: pointer;
        width: 100px;
        height: 100px;
        border-radius: 50%;
    }
    
    .info {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        flex-wrap: wrap;
        margin-top: 20px;
    }
    
    .info2 {
        /* display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap; */
        margin: 10px;
        color: #bfbfbf;
    }
    
    .info div {
        width: 100%;
        text-align: left;
        margin-left: 40px;
    }
    
    .info .username {
        font-size: 20px;
        color: #f4630b;
    }
    
    .info sign {
        font-size: 14px;
        color: #848484;
    }
    
    .manager {
        margin-top: 30px;
    }
    
    .form {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        flex-wrap: wrap;
        margin-top: 20px;
    }
    
    .left,
    .right {
        width: 50%;
    }
    /* avatar */
    
    .avatar-uploader .el-upload {
        border: 1px dashed #d9d9d9;
        border-radius: 6px;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }
    
    .avatar-uploader .el-upload:hover {
        border-color: #409EFF;
    }
    
    .avatar-uploader-icon {
        font-size: 28px;
        color: #8c939d;
        width: 150px;
        height: 150px;
        line-height: 150px;
        text-align: center;
    }
    
    .avatar {
        width: 150px;
        height: 150px;
        display: block;
    }
    
    .birthday .el-input {
        width: 100%;
    }
    
    .manager .el-tabs__item.is-active {
        color: #f4630b;
    }
    
    .manager .el-tabs__item:hover {
        color: #f4630b;
    }
    
    .manager .el-tabs__active-bar {
        background: #f4630b;
    }
    
    .city .el-cascader {
        width: 100%;
    }
    
    .btns {
        margin-left: 50px;
    }
    
    .btns button:nth-child(1) {
        background-color: #f4630b;
        border-color: #f4630b;
    }
    
    .btns button:nth-child(2) {
        background-color: #848484;
        border-color: #848484;
    }
    
    .btns button {
        margin: 10px 50px;
    }
    
    .subjects {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        flex-wrap: wrap;
    }
    
    .subjects>div {
        width: 31%;
        margin: 10px;
    }
    
    .subject_content {
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        flex-wrap: nowrap;
    }
    
    .subject_content .image {
        width: 30%;
    }
    
    .subject_content img {
        width: 100%;
    }
    
    .subject .el-card__header,
    .subject .el-card__body {
        padding: 10px;
    }
    
    .subject_info {
        margin-left: 10px;
        font-size: 13px;
        color: #848484;
    }
    
    .subject_info .title {
        color: #222;
    }
    
    .subject .el-button--text {
        color: #f4630b;
    }
    
    .post .sub_post {
        /* width: 100%; */
        text-align: left;
    }
    
    .post_image {
        clear: both;
        display: flex;
        justify-content: flex-start;
        align-items: flex-start;
        flex-wrap: wrap;
    }
    
    .post_image img {
        width: 10%;
        margin: 5px;
    }
    
    .post_content {
        width: 80%;
        word-wrap: break-word;
        position: relative;
    }
    
    .post_time {
        position: absolute;
        right: -20%;
        top: 0;
        color: #dfdfdf;
    }
    
    .post_info {
        clear: both;
    }
    
    .post_info>div {
        display: inline-block;
    }
    
    .post_info>div:nth-child(1) {
        float: left;
    }
    
    .post_info>div:nth-child(2) {
        float: right;
    }
    
    .post_info span {
        padding: 5px;
    }
    
    .post .el-collapse-item__header {
        font-size: 15px;
    }
    
    .post .el-collapse-item__wrap {
        margin-left: 20px;
    }
    
    .item .el-badge__content.is-fixed {
        top: 12px;
        right: 0;
    }
    
    .item2 .el-badge__content.is-fixed {
        top: 10px;
        right: 2px;
    }
    
    .demo-table-expand {
        font-size: 0;
    }
    
    .demo-table-expand label {
        width: 90px;
        color: #99a9bf;
    }
    
    .demo-table-expand .el-form-item {
        margin-right: 0;
        margin-bottom: 0;
        width: 50%;
    }
    
    .manager_subject img {
        width: 100px;
        height: 100px;
    }
    
    .subejct_form input {
        height: 30px;
    }
    
    .search-menu {
        margin-left: 50px;
        float: left;
        margin-top: 15px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: nowrap;
    }
    
    .search input {
        float: right;
        width: 200px;
        height: 30px;
        border-radius: 15px;
    }
    
    .search-icon {
        color: #f4630b;
        margin-left: -25px;
        z-index: 100;
        font-size: 18px;
        font-weight: 900;
    }
    
    .sub-menu {
        color: #fff;
    }
    
    .extenal {
        line-height: 60px;
        color: #fff;
    }
    
    .extenal a {
        color: #fff;
        text-decoration: none;
    }
    
    .g-ft {
        padding-top: 30px;
        padding-bottom: 30px;
        text-align: center;
        font-size: 11px;
    }
    
    .postss {
        width: 100%;
        padding-left: 20px;
        border-bottom: 1px solid #dfdfdf;
    }
    
    .posts {
        width: 60%;
        padding-left: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        word-wrap: break-word;
    }
    
    .post_info {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        color: #222;
        /* padding: 10px 0 10px -10px; */
    }
    
    .post_info div {
        margin-right: 20px;
    }
    
    .post_info>div:nth-child(1) img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }
    
    .post_info>div:nth-child(3) {
        color: #dfdfdf;
    }
    
    .post-images {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        flex-wrap: wrap;
        margin-left: -10px;
    }
    
    .post-images img {
        width: 15%;
        margin: 10px;
    }
    
    .post-title {
        font-size: 18px;
        font-weight: 600;
        color: #222;
    }
    
    .post-content {
        font-size: 14px;
        color: #222;
    }
    
    .tubiao span {
        font-size: 14px;
        padding-right: 10px;
        color: #bdbdbd;
    }
    
    .si_infos {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        padding-bottom: 10px;
        border-bottom: 1px dotted #bfbfbf;
    }
    
    .si_avator {
        margin-right: 20px;
    }
    
    .si_avator img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
    }
    
    .si_username {
        color: #bdbdbd;
        font-size: 14px;
    }
    
    .sign2 {
        color: #bdbdbd;
    }
</style>

<body>
    <div id="app">
        <!--菜单导航-->
        <el-menu :default-active="activeIndex" class="el-menu-demo menu-padding" mode="horizontal" @select="handleSelect" background-color="#f4630b" text-color="#fff" active-text-color="#ffd04b">
            <el-menu-item index="0"><a href="/">首页</a></el-menu-item>
            <el-menu-item index="1"><a href="/community">校论区</a></el-menu-item>
            <el-menu-item index="2"><a href="/life">生活休闲</a></el-menu-item>
            <el-menu-item index="3"><a href="/whiteWall">表白墙</a></el-menu-item>
            <el-submenu index="4">
                <template slot="title">我的</template>
                <el-menu-item index="4"><a href="/mine?index=4" class="sub-menu">账号设置</a></el-menu-item>
                <el-menu-item index="5"><a href="/mine?index=5" class="sub-menu">动态</a></el-menu-item>
                <el-menu-item index="6"><a href="/mine?index=6" class="sub-menu">我的消息</a></el-menu-item>
                <el-menu-item index="7"><a href="/mine?index=7" class="sub-menu">我的关注</a></el-menu-item>
                <el-menu-item index="8"><a href="/mine?index=8" class="sub-menu">我的吧</a></el-menu-item>
                <el-menu-item index="9"><a href="/mine?index=9" class="sub-menu">帮助和反馈</a></el-menu-item>
                <el-menu-item index="10" @click="exit">退出</el-menu-item>
            </el-submenu>
            <div class="search-menu">
                <el-input class="search" placeholder="请输入内容" v-model="search" clearable>
                </el-input>
                <i class="el-icon-search search-icon"></i>
            </div>
            <div class="extenal" v-if="!isUser">
                <a href="/login">登录</a>
                <a href="/register">注册</a>
            </div>
        </el-menu>

        <div class="content">
            <div class="user" v-if="isUser">
                <div class="avator">
                    <img :src="user.avator" alt="">
                </div>
                <div class="info">
                    <div class="username">{{user.username}}</div>
                    <div class="sign" v-if="user.sign">{{user.sign}}</div>
                    <div class="sign sign2" v-else>一句话展示个人魅力</div>
                </div>
            </div>
            <div class="user" v-else>
                <div class="avator" @click="toLogin">
                    <img src="/images/default_avator.jpeg" alt="">
                </div>
                <div class="info2">
                    <p>sorry, 您还没有登录</p>
                    <p>快去登陆，发现更多好玩的吧</p>
                </div>
            </div>

            <div class="manager" v-if="isUser">
                <template>
                    <el-tabs v-model="activeName" @tab-click="handleClick">
                        <!-- 账号管理 -->
                        <el-tab-pane label="用户管理" name="4">
                            <el-form :model="user" :rules="rules" ref="user" label-width="100px" class="demo-ruleForm">
                                <div class="form">
                                    <div class="left">
                                        <el-form-item label="用户头像" prop="avator">
                                                <el-upload
                                                class="avatar-uploader"
                                                action="/changeAvator"
                                                :show-file-list="false"
                                                :on-success="handleAvatarSuccess"
                                                :before-upload="beforeAvatarUpload">
                                                <img v-if="user.avator" :src="user.avator" class="avatar">
                                                <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                                              </el-upload>
                                        </el-form-item>
                                        <el-form-item label="用户名称" prop="username">
                                            <el-input v-model="user.username" placeholder="请输入用户名称"></el-input>
                                        </el-form-item>
                                        <el-form-item label="用户密码" prop="passowrd">
                                            <el-input type="password" v-model="user.password" placeholder="请输入用户密码"></el-input>
                                        </el-form-item>
                                        <el-form-item label="重复密码" prop="repassword">
                                            <el-input type="password" v-model="user.password" placeholder="请重复用户密码"></el-input>
                                        </el-form-item>
                                        <el-form-item label="个性签名" prop="sign">
                                            <el-input type="textarea" :rows="3" v-model="user.sign" placeholder="请输入用户签名"></el-input>
                                        </el-form-item>
                                        
                                    </div>
                                    <div class="right">
                                            <el-form-item label="绑定邮箱" prop="email">
                                                <el-input v-model="user.email" placeholder="请输入用户邮箱"></el-input>
                                            </el-form-item>
                                            <el-form-item label="手机号码" prop="phone_number">
                                                <el-input v-model="user.phone_number" placeholder="请输入用户手机号"></el-input>
                                            </el-form-item>
                                            <el-form-item label="出生日期" prop="birthday" class="birthday">
                                                    <el-date-picker
                                                    v-model="user.birthday"
                                                    align="right"
                                                    type="date"
                                                    placeholder="请选择出生日期"
                                                    >
                                                  </el-date-picker>
                                            </el-form-item>
                                            <el-form-item label="省份" prop="city" class="city">
                                                    <el-cascader
                                                    @change="handleChange"
                                                    :options="options"
                                                    v-model="user.city"
                                                    change-on-select
                                                  ></el-cascader>
                                            </el-form-item>
                                            <el-form-item label="爱好" prop="hobby">
                                                <el-input v-model="user.hobby"></el-input>
                                            </el-form-item>
                                            <el-form-item label="用户性别" prop="sex">
                                                <el-radio v-model="user.sex" label="1">女</el-radio>
                                                <el-radio v-model="user.sex" label="2">男</el-radio>
                                            </el-form-item>
                                            <div class="btns">
                                                <el-button type="primary" @click="commitUser">完善信息</el-button>
                                                <el-button type="success">取消完善</el-button>
                                            </div>
                                    </div>
                                </div>
                            </el-form>
                        </el-tab-pane>

                        <!-- 动态 -->
                        <el-tab-pane label="动态" name="5" class="dongtai">
                            <div class="postss" v-for="item in posts">
                                <div class="posts">
                                    <div class="post_info">
                                        <div>
                                            <img :src="user.avator" alt="">
                                        </div>
                                        <div>
                                            <span>{{user.username}}</span>
                                        </div>
                                        <div>
                                            <span>{{item.time}}</span>
                                        </div>
                                    </div>
                                    <div class="post-title">
                                        {{item.post_title}}
                                    </div>
                                    <div class="post-content">
                                        {{item.post_content}}
                                    </div>
                                    <div class="post-images">
                                        <img :src="image" v-for="image in item.post_photos" alt="">
                                    </div>
                                    <div class="tubiao">
                                        <span class="fa fa-heart heart" > {{item.hearts}}</span>
                                        <span class="fa fa-commenting comment"> {{item.reply_num}}</span>
                                        <span class="fa fa-share share"> {{item.share}}</span>
                                    </div>
                                </div>
                            </div>
                            <!-- <el-collapse v-model="postActive" class="posts" accordion>
                                        <el-collapse-item :title="post.post_title" class="post" :name="index" v-for="(post,index) in posts">
                                            <div class="sub-post post_content">
                                                <span>
                                                                    {{post.post_content}}
                                                                </span>
                                                <span class="post_time">{{post.time}}</span>
                                            </div>
                                            <div class="post_image sub_post">
                                                <img :src="image" alt="" v-for="image in post.post_photos">
                                            </div>
                                            <div class="post_info sub-post">
                                                <div>
                                                    <span class="fa fa-tag"></span>
                                                    <span>{{post.subject_name}}</span>
                                                </div>
                                                <div>
                                                    <span v-if="post.look">浏览数{{post.look}}</span>
                                                    <span class="fa fa-heart heart"> {{post.hearts}}</span>
                                                    <span class="fa fa-commenting comment"> {{post.reply_num}}</span>
                                                    <span class="fa fa-share share"> {{post.share}}</span>
                                                </div>
                                            </div>
                                        </el-collapse-item>
                                    </el-collapse> -->
                        </el-tab-pane>

                        <!-- 我的消息 -->
                        <el-tab-pane name="6">
                            <span slot="label">
                                <el-badge :value="12" class="item">
                                    我的消息
                                </el-badge>
                            </span>
                            <el-tabs type="border-card">
                                <el-tab-pane>
                                    <span slot="label">
                                        <el-badge :value="6" class="item2">
                                                私信
                                        </el-badge>
                                    </span>
                                    <div class="sixin">
                                        <div class="si_infos" v-for="item in infos">
                                            <div class="si_avator">
                                                <img :src="item.from_user_avator" alt="">
                                            </div>
                                            <div>
                                                <div class="si_username">{{item.from_user_name}}</div>
                                                <div>
                                                    {{item.contentText}}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </el-tab-pane>
                                <el-tab-pane>
                                    <span slot="label">
                                        <el-badge :value="7" class="item2">
                                            动态消息
                                        </el-badge>
                                    </span> 
                                    <div>
                                        动态消息
                                    </div>
                                </el-tab-pane>
                                <el-tab-pane>
                                    <span slot="label">
                                        <el-badge :value="6" class="item2">
                                            系统消息
                                        </el-badge>
                                    </span>
                                    <div>
                                        
                                    </div>
                                </el-tab-pane>
                            </el-tabs>
                        </el-tab-pane>

                        <!-- 我的关注 -->
                        <el-tab-pane label="我的关注" name="7">
                            <div class="subjects">
                                <div class="subject" v-for="(subject, index) in subjects">
                                    <el-card class="box-card">
                                        <div slot="header" class="clearfix">
                                            <span>{{subject.subject_name}}</span>
                                            <el-button style="float: right; padding: 3px 0" type="text" @click="cancelJoinSubject(subject, index)">取消关注</el-button>
                                        </div>
                                        <div class="subject_content">
                                            <div class="image">
                                                <img :src="subject.subject_image" alt="">
                                            </div>
                                            <div class="subject_info">
                                                <div><span class="title">时间：</span>{{subject.time}}</div>
                                                <div><span class="title">关注人数：</span>{{subject.follows}}</div>
                                                <div><span class="title">帖子数：</span>{{subject.post_num}}</div>
                                                <div><span class="title">等级：</span>{{subject.level}}</div>
                                            </div>
                                        </div>
                                    </el-card>
                                </div>
                            </div>
                        </el-tab-pane>

                        <!-- 我的话题 -->
                        <el-tab-pane label="我的吧" name="8">
                            <el-table :data="manager_subjects" style="width: 100%">
                                <el-table-column type="expand">
                                    <template slot-scope="props">
                                        <el-form label-position="left" inline class="demo-table-expand subejct_form">
                                            <el-form-item label="吧名称">
                                                <el-input v-model="props.row.subject_name" :value="props.row.subject_name" :disabled="!props.row.edit"></el-input>
                                            </el-form-item>
                                            <el-form-item label="吧主">
                                                <el-input v-model="props.row.owner" :value="props.row.owner" disabled></el-input>
                                            </el-form-item>
                                            <el-form-item label="创建时间">
                                                <el-input v-model="props.row.time" :value="props.row.time" disabled></el-input>
                                            </el-form-item>
                                            <el-form-item label="关注人数">
                                                <el-input v-model="props.row.follows" :value="props.row.follows" disabled></el-input>
                                            </el-form-item>
                                            <el-form-item label="帖子数">
                                                <el-input v-model="props.row.post_num" :value="props.row.post_num" disabled></el-input>
                                            </el-form-item>
                                            <el-form-item label="吧等级">
                                                <el-input v-model="props.row.level" :value="props.row.level" disabled></el-input>
                                            </el-form-item>
                                            <el-form-item label="吧描述">
                                                <el-input type="textarea" :rows="3" v-model="props.row.subject_desc" :value="props.row.subject_desc" :disabled="!props.row.edit"></el-input>
                                            </el-form-item>
                                            <el-form-item label="头像" class="manager_subject">
                                                    <el-upload :disabled="!props.row.edit"
                                                        class="avatar-uploader"
                                                        action=""
                                                        :show-file-list="false"
                                                        :on-success="handleAvatarSuccess"
                                                        :before-upload="beforeAvatarUpload">
                                                        <img v-if="props.row.subject_image" :src="props.row.subject_image" class="avatar">
                                                  </el-upload>
                                            </el-form-item>
                                            <el-form-item label="操作" class="manager_subject">
                                                <template>
                                                    <el-button
                                                    size="mini"
                                                    type="danger"
                                                    @click="handleEdit(props.row)">修改</el-button>
                                                    <el-button
                                                    size="mini"
                                                    @click="handleSave(props.row)">保存</el-button>
                                                </template>
                </el-form-item>
                </el-form>
                </template>
                </el-table-column>
                <el-table-column label="吧名称" prop="subject_name">
                </el-table-column>
                <el-table-column label="吧主" prop="owner">
                </el-table-column>
                <el-table-column label="创建时间" prop="time">
                </el-table-column>
                <el-table-column label="关注人数" prop="follows">
                </el-table-column>
                <el-table-column label="帖子数" prop="post_num">
                </el-table-column>
                <el-table-column label="吧等级" prop="level">
                </el-table-column>
                <el-table-column label="操作" prop="subject_level" width="150">
                    <template slot-scope="scope">
                                        <el-button
                                        size="mini"
                                        type="danger"
                                        >修改</el-button>
                                    </template>
                </el-table-column>
                </el-table>
                </el-tab-pane>
                </el-tabs>
                </template>
            </div>
        </div>

        <div class="g-ft">
            <div class="m-ft2">
                <a target="_blank" rel="nofollow" href="/">首页</a>
                <span>|</span>
                <a target="_blank" rel="nofollow" href="/">社区话题</a>
                <span>|</span>
                <a target="_blank" rel="nofollow" href="/">休闲区</a>
                <span>|</span>
                <a target="_blank" rel="nofollow" href="/">表白墙</a>
                <span>|</span>
                <a target="_blank" rel="nofollow" href="/">个人主页</a></div>
            <div style="margin-top:10px;">ztchun版权所有　&copy;2017 - 2018　校园社区
            </div>
        </div>
    </div>
</body>
<script src="http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- 先引入 Vue -->
<script src="https://cdn.bootcss.com/vue/2.5.13/vue.js"></script>
<script src="https://cdn.bootcss.com/vue-resource/1.3.4/vue-resource.js"></script>
<!-- 引入组件库 -->
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script>
    new Vue({
        el: '#app',
        data: function() {
            var checkEmail = (rule, value, callback) => {
                if (!value) {
                    return callback(new Error("请输入邮箱地址"))
                } else {
                    var match = /^([0-9A-Za-z\-_\.]+)@([0-9a-z]+\.[a-z]{2,3}(\.[a-z]{2})?)$/g
                    if (!match.test(value)) {

                    }
                }
            }
            return {
                search: '',
                activeIndex: '4',
                activeName: '4',
                user: {},
                options: [],
                rules: {
                    avator: [{
                        required: true,
                        message: '请上传图片',
                        trigger: 'blur'
                    }],
                    username: [{
                        required: true,
                        message: '请输入用户名称',
                        trigger: 'blur'
                    }],
                    password: [{
                        required: true,
                        message: '请输入用户名称',
                        trigger: 'blur'
                    }],
                    emaiol: [{
                        required: true,
                        message: '请输入邮箱地址',
                        trigger: 'blur'
                    }]
                },
                // 我的关注
                subjects: [{
                    subject_name: 'subject_name',
                    subject_desc: 'subejct_desc',
                    subject_image: '/avatar.jpg',
                    time: 'time',
                    follows: '23',
                    posts: '23',
                    subject_level: '2'
                }, {
                    subject_name: 'subject_name',
                    subject_desc: 'subejct_desc',
                    subject_image: '/avatar.jpg',
                    time: 'time',
                    follows: '23',
                    posts: '23',
                    subject_level: '2'
                }, {
                    subject_name: 'subject_name',
                    subject_desc: 'subejct_desc',
                    subject_image: '/avatar.jpg',
                    time: 'time',
                    follows: '23',
                    posts: '23',
                    subject_level: '2'
                }, {
                    subject_name: 'subject_name',
                    subject_desc: 'subejct_desc',
                    subject_image: '/avatar.jpg',
                    time: 'time',
                    follows: '23',
                    posts: '23',
                    subject_level: '2'
                }, {
                    subject_name: 'subject_name',
                    subject_desc: 'subejct_desc',
                    subject_image: '/avatar.jpg',
                    time: 'time',
                    follows: '23',
                    posts: '23',
                    subject_level: '2'
                }],
                postActive: '1',
                // 动态
                posts: [],
                // 我的吧
                manager_subjects: [],
                formdisabled: false,
                isUser: false,
                infos: [],
                sysInfos: []
            }
        },
        created() {
            var index = "4"
            if (window.location.href.indexOf("?") >= 0) {
                index = window.location.href.split("?")[1].slice(6) || '4'
            }
            console.log(index)
            this.activeIndex = index
            this.activeName = index
            this.initCity()
            this.initUser()
        },
        watch: {
            // 监听
            activeName(oldVal, newVal) {
                this.posts = []
                this.subjects = []
                this.manager_subjects = []
                this.infos = [],
                    this.sysInfos = []
            }
        },
        methods: {
            // 请求的是哪一个tag
            init() {
                var _this = this
                this.handleAjax("/getMineInfo", 'get', {
                    tag: _this.activeName
                }, function(data) {
                    switch (_this.activeName) {
                        case "4":
                            break
                        case "5":
                            let posts = JSON.parse(data)
                            posts.forEach((value, index) => {
                                if (value.user_name == _this.user.username) {
                                    _this.posts.push(value)
                                }
                            })
                            console.log(_this.posts)
                            break
                        case "6":
                            _this.getUnreadedInfos()
                            break
                        case "7":
                            let subjects = JSON.parse(data)
                            subjects.forEach((value, index) => {
                                value.follows = value.follow_user.length
                                value.follow_user.forEach((value2, index2) => {
                                    if (value2.user_name == _this.user.username) {
                                        _this.subjects.push(value)
                                    }
                                })
                            })
                            break
                        case "8":
                            let manager_subjects = JSON.parse(data)
                            manager_subjects.forEach((value, index) => {
                                value.follows = value.follow_user.length
                                value.edit = false
                                value.editText = '修改'
                                if (!value.subject_image) {
                                    value.subject_image = '/images/subject_default.png'
                                }
                                if (value.owner == _this.user.username) {
                                    _this.manager_subjects.push(value)
                                }
                            })
                            console.log(_this.manager_subjects)
                            break
                    }
                })
            },
            // 请求用户信息
            initUser() {
                var _this = this
                this.handleAjax("/userInfo", 'get', {}, function(data) {
                    if (data == '0') {
                        // 未注册
                        _this.isUser = false
                        _this.$message.error("sorry,您还未注册哦")
                    } else if (data == '1') {
                        // 未登录
                        _this.isUser = false
                    } else {
                        //  查询成功
                        _this.isUser = true
                        _this.user = JSON.parse(data)
                        _this.user.city = _this.user.city.split("-")
                        _this.user.sex = _this.user.sex == "女" ? "1" : "2"
                        _this.init()
                    }
                })
            },
            // 城市选择
            initCity() {
                this.$http.jsonp("http://api.jisuapi.com/area/province", {
                    params: {
                        appkey: 'a04a76c1b8eda3d0'
                    }
                }).then(resp => {
                    var first = []
                    resp.body.result.forEach((value, index, aray) => {
                        first.push(value.name)
                        value.label = value.name
                        value.value = value.id
                        value.children = [{
                            label: '请选择',
                            value: '请选择'
                        }]
                    })
                    this.options = resp.body.result
                    var firstIndex = (first.indexOf(this.user.city[0]) + 1).toString()
                    this.user.city[0] = firstIndex
                    this.$http.jsonp("http://api.jisuapi.com/area/city", {
                        params: {
                            parentid: firstIndex,
                            appkey: 'a04a76c1b8eda3d0'
                        }
                    }).then(resp => {
                        var second = []
                        resp.body.result.forEach((value, index, aray) => {
                            value.label = value.name
                            value.value = value.id
                            second.push(value.label)
                        })
                        this.options[Number(firstIndex) - 1].children = resp.body.result
                        var secondIndex = second.indexOf(this.user.city[1])
                        this.user.city[1] = this.options[Number(firstIndex) - 1].children[secondIndex].id
                    }, response => {
                        console.log("发送失败" + response.status + "," + response.statusText);
                    });

                }, response => {
                    console.log("发送失败" + response.status + "," + response.statusText);
                });
            },
            handleAjax(url, method, data, handleSuccess) {
                $.ajax({
                    url: url,
                    type: method,
                    data: data,
                    cache: false,
                    success: handleSuccess,
                    error: function(err) {
                        console.log(err)
                    }
                })
            },
            handleSelect: function(key, keyPath) {
                console.log(key, keyPath)
            },
            // tab切换
            handleClick(tab, event) {
                switch (tab.name) {
                    // 用户管理
                    case "4":
                        this.initCity()
                        this.initUser()
                        break
                        // 动态
                    case "5":
                        this.init()
                        break
                        // 我的消息
                    case "6":
                        this.init()
                        break
                        // 关注的吧
                    case "7":
                        this.init()
                        break
                        // 创建的吧
                    case "8":
                        this.init()
                        break
                }
            },
            // 全国省市查询
            handleChange(value) {
                var _this = this
                this.$http.jsonp("http://api.jisuapi.com/area/city", {
                    params: {
                        parentid: value[0],
                        appkey: 'a04a76c1b8eda3d0'
                    }
                }).then(resp => {
                    resp.body.result.forEach((value, index, aray) => {
                        value.label = value.name
                        value.value = value.id
                    })
                    _this.options[Number(value[0]) - 1].children = resp.body.result
                        // console.log(this.user.city)
                }, response => {
                    console.log("发送失败" + response.status + "," + response.statusText);
                });
            },
            handleAvatarSuccess(res, file) {
                console.log(res)
                if (res != 0) {
                    var index = res.indexOf(this.user.username)
                    this.user.avator = '/' + res.slice(index)
                }
            },
            beforeAvatarUpload(file) {
                const isLt2M = file.size / 1024 / 1024 < 2;
                if (!isLt2M) {
                    this.$message.error('上传头像图片大小不能超过 2MB!');
                }
                return isLt2M;
            },
            // 修改
            handleEdit(subject) {
                subject.edit = true
                subject.editText = "完成"
            },
            // 保存
            handleSave(subject) {
                if (subject.edit) {
                    this.handleAjax('/saveSubject', 'post', {
                        _id: subject._id,
                        subejct_name: subject.subject_name,
                        subject_desc: subject.subject_desc
                    }, function(data) {
                        if (data == "1") {
                            subject.edit = false
                        }
                    })
                }
                console.log()
            },
            // 删除
            // handleDelete(index, row) {
            //     var _this = this
            //     this.handleAjax('deleteSubject', 'post', {
            //         _id: row._id
            //     },function(data){
            //         if (data == "1") {
            //             _this.manager_subjects.splice(index, 1)
            //             _this.$message({
            //                 message: '删除成功',
            //                 type: 'success'
            //             })
            //         }
            //     })
            // },
            // 点击登录
            toLogin() {
                window.location.href = "/login"
            },
            // 完善信息
            commitUser() {
                var first = this.options[this.user.city[0] - 1],
                    second = ""
                first.children.forEach((value, index) => {
                    if (value.id == this.user.city[1]) {
                        second = value.label
                    }
                })
                this.user.city = [first.label, second]
                var _this = this
                this.handleAjax("/commitUserInfo", "post", this.user, function(data) {
                    if (data == "1") {
                        _this.$message({
                            message: '更新成功',
                            type: 'success'
                        })
                    }
                    _this.initUser()
                    _this.initCity()
                })
            },
            // exit
            exit() {
                var _this = this
                this.handleAjax("/exit", "get", {}, function(data) {
                    if (data == "1") {
                        _this.$message({
                            message: '退出成功',
                            type: 'warning'
                        })
                        window.location.href = "/login"
                    }
                })
            },
            // 取消关注
            cancelJoinSubject(subject, index) {
                var _this = this
                this.handleAjax("/cancelJoinSubject", "post", {
                    _id: subject._id,
                    user_name: _this.user.username,
                    avator: _this.user.avator
                }, function(data) {
                    if (data == "1") {
                        _this.subjects.splice(index, 1)
                    }
                })
            },
            // 获取未读消息
            getUnreadedInfos() {
                var _this = this
                this.handleAjax("/getUnreadedMsg", 'post', {
                    username: _this.user.username
                }, function(data) {
                    var receiveMsgs = JSON.parse(data)
                    receiveMsgs.forEach((value, index) => {
                        if (!value.readed) {
                            _this.infos.push(value)
                        }
                    })
                    console.log(_this.infos)
                })
            }
        }
    })
</script>

</html>